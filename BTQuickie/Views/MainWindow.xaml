<Window x:Class="BTQuickie.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:customBehaviors="clr-namespace:BTQuickie.Behaviors"
        xmlns:fontAwesome="http://schemas.fontawesome.io/icons/"
        xmlns:localization="clr-namespace:BTQuickie.Resources.Localization"
        xmlns:trayIcon="https://github.com/nullsoftware/TrayIcon"
        Visibility="{Binding IsWindowVisible, Converter={StaticResource VisibilityBooleanConverter}}"
        ShowInTaskbar="False"
        WindowStartupLocation="Manual"
        Title="{x:Static localization:AppResources.Title}"
        x:Name="this"
        mc:Ignorable="d"
        Height="350"
        Width="250">

    <!-- Tray Icon -->
    <trayIcon:TrayIconHandlers.TrayIcons>
        <trayIcon:TrayIcon
            Title="{Binding ConnectedBluetoothDeviceInfo.Name, 
                Converter={StaticResource EmptyStringToParameterConverter},
                ConverterParameter={x:Static localization:AppResources.Title}}"
            IconSource="{StaticResource TrayIconSource}"
            ClickCommand="{Binding ShowWindowCommand}"
            NotificationServiceMemberPath="NotificationService">

            <!-- Input Bindings -->
            <trayIcon:TrayIcon.InputBindings>

                <!-- WIN + SHIFT + K -->
                <KeyBinding Key="K"
                            Modifiers="Windows+Shift"
                            Command="{Binding ShowWindowCommand}"
                            customBehaviors:GlobalHotkeyBehavior.Register="True" />

            </trayIcon:TrayIcon.InputBindings>
        </trayIcon:TrayIcon>
    </trayIcon:TrayIconHandlers.TrayIcons>

    <Window.Resources>

        <!-- Styles -->

        <!-- List View -->
        <!-- Item Container -->
        <Style x:Key="ListViewItemContainerStyle"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsFocused"
                                     Value="True">
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray900}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray700}" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray900}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="Transparent" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray300}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray500}" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray700}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="TextElement.Foreground"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!-- Main Grid -->
    <Grid Style="{StaticResource MainGridStyle}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Top Section -->
        <Grid Grid.Row="0"
              Visibility="{Binding ConnectedBluetoothDeviceInfo.Name,
                Converter={StaticResource StringToVisibilityConverter}}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Connected Bluetooth Device Info  -->
            <Border Grid.Column="0"
                    BorderThickness="{StaticResource ThicknessXMicro}"
                    BorderBrush="{StaticResource Emerald500}">
                <StackPanel>
                    <Label Content="{Binding ConnectedBluetoothDeviceInfo.Name}" />
                    <Label Content="{Binding ConnectedBluetoothDeviceInfo.Address}" />
                </StackPanel>
            </Border>

            <!-- Disconnect Button -->
            <Button Grid.Column="1"
                    BorderThickness="0"
                    Padding="{StaticResource ThicknessMicro}"
                    Background="{StaticResource Gray600}"
                    Command="{Binding DisconnectCommand}"
                    Content="{x:Static localization:AppResources.Disconnect}" />
        </Grid>

        <!-- Middle Section -->
        <Grid Grid.Row="1">

            <!-- Device List -->
            <ListView TabIndex="0"
                      BorderBrush="Transparent"
                      BorderThickness="0"
                      SelectionMode="Single"
                      ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
                      ItemsSource="{Binding Devices}"
                      Background="{StaticResource Gray600}"
                      SelectedItem="{Binding SelectedBluetoothDeviceInfo}"
                      Visibility="{Binding IsBusy,
                        Converter={StaticResource InvertedVisibilityBooleanConverter}}"
                      customBehaviors:ForceFocusBehavior.Focus="True">

                <!-- Keyboard Input Command Bindings -->
                <ListView.InputBindings>

                    <!-- Enter -->
                    <KeyBinding Key="Enter"
                                Command="{Binding ConnectCommand}"
                                CommandParameter="{Binding SelectedBluetoothDeviceInfo}" />
                    <!-- Esc -->
                    <KeyBinding Key="Escape"
                                Command="{Binding HideWindowCommand}" />

                </ListView.InputBindings>

                <ListView.ItemTemplate>

                    <DataTemplate>

                        <StackPanel>

                            <!-- Mouse Input Command Bindings -->
                            <StackPanel.InputBindings>

                                <!-- Left Double Click -->
                                <MouseBinding Gesture="LeftDoubleClick"
                                              Command="{Binding DataContext.ConnectCommand, 
                                                Source={x:Reference this}}"
                                              CommandParameter="{Binding .}" />

                                <!-- Right Double Click -->
                                <MouseBinding Gesture="RightDoubleClick"
                                              Command="{Binding DataContext.ConnectCommand, 
                                                Source={x:Reference this}}"
                                              CommandParameter="{Binding .}" />

                            </StackPanel.InputBindings>

                            <!-- Name -->
                            <Label
                                Content="{Binding Name, 
                                    TargetNullValue={x:Static localization:AppResources.UnknownDevice}, 
                                    FallbackValue={x:Static localization:AppResources.UnknownDevice}}" />

                            <!-- Address -->
                            <Label Content="{Binding Address}" />

                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!-- Spinner -->
            <fontAwesome:ImageAwesome Icon="BluetoothB"
                                      Spin="True"
                                      Foreground="{StaticResource Gray800}"
                                      Margin="{StaticResource ThicknessLarge}"
                                      Visibility="{Binding IsBusy, 
                                        Converter={StaticResource VisibilityBooleanConverter}}" />
        </Grid>

        <!-- Button (Discover Devices) -->
        <Button Grid.Row="2"
                TabIndex="1"
                Command="{Binding DiscoverDevicesCommand}"
                Content="{x:Static localization:AppResources.FindBluetoothDevices}"
                Background="{StaticResource Gray700}" />
    </Grid>

</Window>