<Window x:Class="BTQuickie.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fontAwesome="http://schemas.fontawesome.io/icons/"
        xmlns:resources="clr-namespace:BTQuickie.Resources"
        Title="{x:Static resources:AppResources.Title}"
        x:Name="this"
        mc:Ignorable="d"
        Height="350"
        Width="250">

    <Window.Resources>

        <!-- Styles -->

        <!-- List View -->
        <!-- Item Container -->
        <Style x:Key="ListViewItemContainerStyle"
               TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray700}" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray900}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="Transparent" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray300}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray500}" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="{StaticResource Gray700}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="TextElement.Foreground"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <!-- Main Grid -->
    <Grid Style="{StaticResource MainGridStyle}">

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Content Grid -->
        <Grid Grid.Row="0">

            <!-- Device List -->
            <ListView SelectionMode="Single"
                      ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
                      ItemsSource="{Binding Devices}"
                      Background="{StaticResource Gray600}"
                      Visibility="{Binding IsBusy,
                        Converter={StaticResource InvertedVisibilityBooleanConverter}}">
                <ListView.ItemTemplate>
                    <DataTemplate>

                        <StackPanel>

                            <!-- Command Bindings -->
                            <StackPanel.InputBindings>

                                <!-- Left Click -->
                                <MouseBinding Gesture="LeftDoubleClick"
                                              Command="{Binding DataContext.ConnectDisconnectCommand,
                                                Source={x:Reference this}}"
                                              CommandParameter="{Binding Address}" />

                            </StackPanel.InputBindings>

                            <!-- Name -->
                            <Label
                                Content="{Binding Name, 
                                    TargetNullValue={x:Static resources:AppResources.UnknownDevice}, 
                                    FallbackValue={x:Static resources:AppResources.UnknownDevice}}" />

                            <!-- Address -->
                            <Label Content="{Binding Address}" />

                        </StackPanel>

                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!-- Spinner -->
            <fontAwesome:ImageAwesome Icon="BluetoothB"
                                      Spin="True"
                                      Foreground="{StaticResource Gray800}"
                                      Margin="{StaticResource ThicknessLarge}"
                                      Visibility="{Binding IsBusy, 
                                        Converter={StaticResource VisibilityBooleanConverter}}" />
        </Grid>

        <!-- Button (Discover Devices) -->
        <Button Grid.Row="1"
                Command="{Binding DiscoverDevicesCommand}"
                Content="{x:Static resources:AppResources.FindBluetoothDevices}"
                Background="{StaticResource Gray700}" />
    </Grid>
</Window>