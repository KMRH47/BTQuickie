<Window x:Class="BTQuickie.Views.TaskbarIconView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:behaviors="clr-namespace:BTQuickie.Behaviors"
        xmlns:resources="clr-namespace:BTQuickie.Resources.Styles.Views"
        xmlns:viewModels="clr-namespace:BTQuickie.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:TaskbarIconViewModel}">

    <!-- Resources -->
    <Window.Resources>
        <resources:TaskbarIconViewResources />
    </Window.Resources>

    <!-- Tray Icon -->
    <tb:TaskbarIcon Name="TaskbarIcon"
                    NoLeftClickDelay="True"
                    ContextMenu="{StaticResource ContextMenu}"
                    IconSource="{StaticResource TrayIconSource}"
                    LeftClickCommand="{Binding ShowWindowCommand}">

        <!-- Input Bindings -->
        <tb:TaskbarIcon.InputBindings>

            <!-- Keybinding -->
            <KeyBinding
                Key="{Binding ShowBluetoothDevicesHotKey.Key,
                        Converter={StaticResource StringKeyConverter}, Mode=OneWay}"
                Modifiers="{Binding ShowBluetoothDevicesHotKey.Modifiers,
                        Converter={StaticResource StringModifierKeysConverter}, Mode=OneWay}"
                Command="{Binding ShowWindowCommand}"
                behaviors:GlobalHotkeyBehavior.Register="True" />

        </tb:TaskbarIcon.InputBindings>
    </tb:TaskbarIcon>
</Window>